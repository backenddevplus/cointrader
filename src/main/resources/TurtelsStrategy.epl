// Moving Average using of esper built in functions

@Name('LONG_TRADE_WINDOW')
create window
	LongTradeWindow.win:time(20 days)
	as
	select *
from
	Trade;
	
	@Name('SHORT_TRADE_WINDOW')
create window
	ShortTradeWindow.win:time(10 days)
	as
	select *
from
	Trade;

@Name('LAST_TRADE_WINDOW')
create window
	LastTradeWindow.std:lastevent() 
as
	select *
from
	Trade;

	@Name('LAST_TRADE_WINDOW')
create window
	LastestTradeWindow.std:lastevent() 
as
	select *
from
	Trade;
	
	
	create window
	HLWindow.win:time(20 days) (price double, timestamp long);
//as
	//select priceAsDouble as price, timestamp as timestamp
	//from
	//Trade;
	

	
create window LongHighIndicator.std:lastevent() (high double, timestamp long);
create window LongLowIndicator.std:lastevent() (low double, timestamp long);
create window ShortLowIndicator.std:lastevent() (low double, timestamp long);
create window ShortHighIndicator.std:lastevent() (high double, timestamp long);

@Name('BAR_WINDOW')		
create window OHLCWindow.std:lastevent() 
as
	select *
from
	Bar;
	
@Name('ATR_WINDOW')		
create window ATRWindow.std:lastevent() (atr double);


@Priority(6)	
@Name('TRADE_BOOK')
insert into LastestTradeWindow
select
	*
from
	Trade where  Trade.market=TurtelsStrategy.getMarket(); 
	



@Priority(5)	
insert into OHLCWindow
select
	*
 from Trade.custom:ohlcbar(timestamp, priceAsDouble);
 
 @Priority(4)
insert into ATRWindow
select coalesce(talib("atr", max, min, last, 2880),0) as atr from OHLCWindow;

 @Priority(3)
	@Name('RETRIVE_LONG_HIGH_TICK')
//on
	//TradeWindow as trigger
	//insert into 
	//LongHighIndicator	
//select trigger.priceAsDouble as high, HLWindow.timestamp as timestamp from
	//HLWindow  having (
	//((last(HLWindow.timestamp) -  first(HLWindow.timestamp)) >=17220000) 
	//and
	// (last(trigger.priceAsDouble)>max(HLWindow.price))
	// );
 @Priority(4)	 
//@Subscriber(className='org.cryptocoinpartners.module.TurtelsStrategy$DataSubscriber')
	insert into 
	LongHighIndicator	
select trigger.priceAsDouble as high,  trigger.timestamp as timestamp from
 Trade.win:time(20 days)  as trigger 
	  left outer join
	 LongTradeWindow
	  on trigger.timestamp=LongTradeWindow.timestamp
	 having (trigger.market=TurtelsStrategy.getMarket() 
	 and 
	((last(trigger.timestamp) -  first(trigger.timestamp)) >=1722000000)
	and 
	((trigger.priceAsDouble)>max(LongTradeWindow.priceAsDouble))
	);


 @Priority(4)
@Name('RETRIVE_LONG_LOW_TICK')
	insert into 
	LongLowIndicator	
select trigger.priceAsDouble as low,  trigger.timestamp as timestamp from
 Trade.win:time(20 days)  as trigger 
	  left outer join
	 LongTradeWindow
	  on trigger.timestamp=LongTradeWindow.timestamp
	 having (trigger.market=TurtelsStrategy.getMarket() 
	 and 
	((last(trigger.timestamp) -  first(trigger.timestamp)) >=1722000000)
	and 
	((trigger.priceAsDouble)<min(LongTradeWindow.priceAsDouble))
	);

 @Priority(4)
	@Name('RETRIVE_SHORT_LOW_TICK')
	insert into 
	ShortLowIndicator	
select trigger.priceAsDouble as low,  trigger.timestamp as timestamp from
 Trade.win:time(10 days)  as trigger 
	  left outer join
	 ShortTradeWindow
	  on trigger.timestamp=ShortTradeWindow.timestamp
	 having (trigger.market=TurtelsStrategy.getMarket() 
	 and 
	((last(trigger.timestamp) -  first(trigger.timestamp)) >=861000000)
	and 
	((trigger.priceAsDouble)<min(ShortTradeWindow.priceAsDouble))
	);

 @Priority(3)
	@Name('RETRIVE_SHORT_HIGH_TICK')
	insert into 
	ShortHighIndicator	
select trigger.priceAsDouble as high,  trigger.timestamp as timestamp from
 Trade.win:time(10 day)  as trigger 
	  left outer join
	 ShortTradeWindow
	  on trigger.timestamp=ShortTradeWindow.timestamp
	 having (trigger.market=TurtelsStrategy.getMarket() 
	 and 
	((last(trigger.timestamp) -  first(trigger.timestamp)) >=861000000)
	and 
	((trigger.priceAsDouble)>max(ShortTradeWindow.priceAsDouble))
	);
	
insert into
	HLWindow
select
	priceAsDouble as price, timestamp as timestamp
	from Trade,method:TurtelsStrategy.getMarket() as strategyMarket where Trade.market=strategyMarket;

@Name('GET OHLC')
//@Subscriber(className='org.cryptocoinpartners.module.TurtelsStrategy$DataSubscriber')
on
	OHLCWindow as OHLCtrigger
select * from OHLCWindow;

@Name('GET_ATR')
select * from ATRWindow;


@Name('TRADE_BOOK')
insert into LongTradeWindow
select
	*
from
	Trade where  Trade.market=TurtelsStrategy.getMarket() ;

	@Name('TRADE_BOOK')
insert into ShortTradeWindow
select
	*
from
	Trade where  Trade.market=TurtelsStrategy.getMarket() ;

//	@Name('GET_LONG_HIGH_TESt')	
	//@Subscriber(className='org.cryptocoinpartners.module.TurtelsStrategy$DataSubscriber')
	//select Trade.timestamp,Trade.priceAsDouble  from Trade.win:time(2 days) 
	//having ((last(Trade.timestamp) -  first(Trade.timestamp))>=172200000);
	
	//172800000 2 days
	//86400000 a day
	//3600000 one hour
	//60000 one minute
	
	//HLWindow  having ((((last(HLWindow.timestamp) -  first(HLWindow.timestamp)) >=10)));
	//and (((last(trigger.priceAsDouble))>max(HLWindow.price)) ) );

	
	

	
		
//	@Name('GET_LONG_HIGH')	
	//@Subscriber(className='org.cryptocoinpartners.module.TurtelsStrategy$DataSubscriber')
	//select  current_timestamp,high from LongHighIndicator;
	

